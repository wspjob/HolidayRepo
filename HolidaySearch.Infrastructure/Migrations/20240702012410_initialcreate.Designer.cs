// <auto-generated />
using System;
using HolidaySearch.Infrastructure.Data.AccessContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HolidaySearch.Infrastructure.Migrations
{
    [DbContext(typeof(SearchDbContext))]
    [Migration("20240702012410_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.HolidayTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartingFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("TravelingTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HolidayTravels");
                });

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly?>("Arrivaltime")
                        .HasColumnType("time");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HotelPricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalAirportId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Nights")
                        .HasColumnType("int");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocalAirportId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.LocalAirport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalAirports");
                });

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.Hotel", b =>
                {
                    b.HasOne("HolidaySearch.Infrastructure.Data.Entities.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId");

                    b.HasOne("HolidaySearch.Infrastructure.Data.Entities.LocalAirport", "LocalAirport")
                        .WithMany("Hotels")
                        .HasForeignKey("LocalAirportId");

                    b.Navigation("Country");

                    b.Navigation("LocalAirport");
                });

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.Country", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("HolidaySearch.Infrastructure.Data.Entities.LocalAirport", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
